// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\Sementation_8K\K_Means_ip_src_SSE9.v
// Created: 2019-03-29 13:41:03
// 
// Generated by MATLAB 9.6 and HDL Coder 3.14
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: K_Means_ip_src_SSE9
// Source Path: Sementation_8K/Segmentation_HW/K-Means/Comparisons/SSE9
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module K_Means_ip_src_SSE9
          (In1_0,
           In1_1,
           In1_2,
           In2_0,
           In2_1,
           In2_2,
           Y_disable,
           SAD_SSE,
           Out1);


  input   signed [17:0] In1_0;  // sfix18_En8
  input   signed [17:0] In1_1;  // sfix18_En8
  input   signed [17:0] In1_2;  // sfix18_En8
  input   signed [17:0] In2_0;  // sfix18_En8
  input   signed [17:0] In2_1;  // sfix18_En8
  input   signed [17:0] In2_2;  // sfix18_En8
  input   signed [17:0] Y_disable;  // sfix18_En8
  input   signed [17:0] SAD_SSE;  // sfix18_En8
  output  signed [37:0] Out1;  // sfix38_En16


  wire switch_compare_1;
  wire signed [17:0] Add_out1;  // sfix18_En8
  wire signed [17:0] Constant_out1;  // sfix18_En8
  wire signed [17:0] Switch_out1;  // sfix18_En8
  wire signed [18:0] Abs_y;  // sfix19_En8
  wire signed [18:0] Abs_cast;  // sfix19_En8
  wire signed [17:0] Abs_out1;  // sfix18_En8
  wire signed [17:0] Add1_out1;  // sfix18_En8
  wire signed [18:0] Abs1_y;  // sfix19_En8
  wire signed [18:0] Abs1_cast;  // sfix19_En8
  wire signed [17:0] Abs1_out1;  // sfix18_En8
  wire signed [18:0] Add5_add_cast;  // sfix19_En8
  wire signed [18:0] Add5_add_cast_1;  // sfix19_En8
  wire signed [18:0] Add5_out1;  // sfix19_En8
  wire signed [17:0] Add2_out1;  // sfix18_En8
  wire signed [35:0] Product_out1;  // sfix36_En16
  wire signed [35:0] Product1_out1;  // sfix36_En16
  wire signed [36:0] Add3_add_cast;  // sfix37_En16
  wire signed [36:0] Add3_add_cast_1;  // sfix37_En16
  wire signed [36:0] Add3_out1;  // sfix37_En16
  wire switch_compare_1_1;
  wire signed [18:0] Abs2_y;  // sfix19_En8
  wire signed [18:0] Abs2_cast;  // sfix19_En8
  wire signed [17:0] Abs2_out1;  // sfix18_En8
  wire signed [19:0] Add6_add_cast;  // sfix20_En8
  wire signed [19:0] Add6_add_cast_1;  // sfix20_En8
  wire signed [19:0] Add6_out1;  // sfix20_En8
  wire signed [37:0] Add6_out1_dtc;  // sfix38_En16
  wire signed [35:0] Product2_out1;  // sfix36_En16
  wire signed [37:0] Add4_add_cast;  // sfix38_En16
  wire signed [37:0] Add4_add_cast_1;  // sfix38_En16
  wire signed [37:0] Add4_out1;  // sfix38_En16
  wire signed [37:0] Switch1_out1;  // sfix38_En16


  assign switch_compare_1 = Y_disable >= 18'sb000000000010000000;



  assign Add_out1 = In1_0 - In2_0;



  assign Constant_out1 = 18'sb000000000000000000;



  assign Switch_out1 = (switch_compare_1 == 1'b0 ? Add_out1 :
              Constant_out1);



  assign Abs_cast = {Switch_out1[17], Switch_out1};
  assign Abs_y = (Switch_out1 < 18'sb000000000000000000 ?  - (Abs_cast) :
              {Switch_out1[17], Switch_out1});
  assign Abs_out1 = Abs_y[17:0];



  assign Add1_out1 = In1_1 - In2_1;



  assign Abs1_cast = {Add1_out1[17], Add1_out1};
  assign Abs1_y = (Add1_out1 < 18'sb000000000000000000 ?  - (Abs1_cast) :
              {Add1_out1[17], Add1_out1});
  assign Abs1_out1 = Abs1_y[17:0];



  assign Add5_add_cast = {Abs_out1[17], Abs_out1};
  assign Add5_add_cast_1 = {Abs1_out1[17], Abs1_out1};
  assign Add5_out1 = Add5_add_cast + Add5_add_cast_1;



  assign Add2_out1 = In1_2 - In2_2;



  assign Product_out1 = Switch_out1 * Switch_out1;



  assign Product1_out1 = Add1_out1 * Add1_out1;



  assign Add3_add_cast = {Product_out1[35], Product_out1};
  assign Add3_add_cast_1 = {Product1_out1[35], Product1_out1};
  assign Add3_out1 = Add3_add_cast + Add3_add_cast_1;



  assign switch_compare_1_1 = SAD_SSE >= 18'sb000000000010000000;



  assign Abs2_cast = {Add2_out1[17], Add2_out1};
  assign Abs2_y = (Add2_out1 < 18'sb000000000000000000 ?  - (Abs2_cast) :
              {Add2_out1[17], Add2_out1});
  assign Abs2_out1 = Abs2_y[17:0];



  assign Add6_add_cast = {Add5_out1[18], Add5_out1};
  assign Add6_add_cast_1 = {{2{Abs2_out1[17]}}, Abs2_out1};
  assign Add6_out1 = Add6_add_cast + Add6_add_cast_1;



  assign Add6_out1_dtc = {{10{Add6_out1[19]}}, {Add6_out1, 8'b00000000}};



  assign Product2_out1 = Add2_out1 * Add2_out1;



  assign Add4_add_cast = {Add3_out1[36], Add3_out1};
  assign Add4_add_cast_1 = {{2{Product2_out1[35]}}, Product2_out1};
  assign Add4_out1 = Add4_add_cast + Add4_add_cast_1;



  assign Switch1_out1 = (switch_compare_1_1 == 1'b0 ? Add6_out1_dtc :
              Add4_out1);



  assign Out1 = Switch1_out1;

endmodule  // K_Means_ip_src_SSE9

