// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\Sementation_8K\K_Means_ip_axi_lite.v
// Created: 2019-03-29 13:41:20
// 
// Generated by MATLAB 9.6 and HDL Coder 3.14
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: K_Means_ip_axi_lite
// Source Path: K_Means_ip/K_Means_ip_axi_lite
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module K_Means_ip_axi_lite
          (reset,
           AXI4_Lite_ACLK,
           AXI4_Lite_ARESETN,
           AXI4_Lite_AWADDR,
           AXI4_Lite_AWVALID,
           AXI4_Lite_WDATA,
           AXI4_Lite_WSTRB,
           AXI4_Lite_WVALID,
           AXI4_Lite_BREADY,
           AXI4_Lite_ARADDR,
           AXI4_Lite_ARVALID,
           AXI4_Lite_RREADY,
           read_ip_timestamp,
           AXI4_Lite_AWREADY,
           AXI4_Lite_WREADY,
           AXI4_Lite_BRESP,
           AXI4_Lite_BVALID,
           AXI4_Lite_ARREADY,
           AXI4_Lite_RDATA,
           AXI4_Lite_RRESP,
           AXI4_Lite_RVALID,
           write_axi_enable,
           write_axi4_stream_video_slave_image_width,
           write_axi4_stream_video_slave_image_height,
           write_axi4_stream_video_slave_hporch,
           write_axi4_stream_video_slave_vporch,
           reset_internal);


  input   reset;
  input   AXI4_Lite_ACLK;  // ufix1
  input   AXI4_Lite_ARESETN;  // ufix1
  input   [15:0] AXI4_Lite_AWADDR;  // ufix16
  input   AXI4_Lite_AWVALID;  // ufix1
  input   [31:0] AXI4_Lite_WDATA;  // ufix32
  input   [3:0] AXI4_Lite_WSTRB;  // ufix4
  input   AXI4_Lite_WVALID;  // ufix1
  input   AXI4_Lite_BREADY;  // ufix1
  input   [15:0] AXI4_Lite_ARADDR;  // ufix16
  input   AXI4_Lite_ARVALID;  // ufix1
  input   AXI4_Lite_RREADY;  // ufix1
  input   [31:0] read_ip_timestamp;  // ufix32
  output  AXI4_Lite_AWREADY;  // ufix1
  output  AXI4_Lite_WREADY;  // ufix1
  output  [1:0] AXI4_Lite_BRESP;  // ufix2
  output  AXI4_Lite_BVALID;  // ufix1
  output  AXI4_Lite_ARREADY;  // ufix1
  output  [31:0] AXI4_Lite_RDATA;  // ufix32
  output  [1:0] AXI4_Lite_RRESP;  // ufix2
  output  AXI4_Lite_RVALID;  // ufix1
  output  write_axi_enable;  // ufix1
  output  [12:0] write_axi4_stream_video_slave_image_width;  // ufix13
  output  [12:0] write_axi4_stream_video_slave_image_height;  // ufix13
  output  [12:0] write_axi4_stream_video_slave_hporch;  // ufix13
  output  [12:0] write_axi4_stream_video_slave_vporch;  // ufix13
  output  reset_internal;  // ufix1


  wire [31:0] top_data_write;  // ufix32
  wire [13:0] top_addr_sel;  // ufix14
  wire top_wr_enb;  // ufix1
  wire top_rd_enb;  // ufix1
  wire [31:0] top_data_read;  // ufix32
  wire top_reset_internal;  // ufix1


  K_Means_ip_addr_decoder u_K_Means_ip_addr_decoder_inst (.clk(AXI4_Lite_ACLK),  // ufix1
                                                          .reset(reset),
                                                          .data_write(top_data_write),  // ufix32
                                                          .addr_sel(top_addr_sel),  // ufix14
                                                          .wr_enb(top_wr_enb),  // ufix1
                                                          .rd_enb(top_rd_enb),  // ufix1
                                                          .read_ip_timestamp(read_ip_timestamp),  // ufix32
                                                          .data_read(top_data_read),  // ufix32
                                                          .write_axi_enable(write_axi_enable),  // ufix1
                                                          .write_axi4_stream_video_slave_image_width(write_axi4_stream_video_slave_image_width),  // ufix13
                                                          .write_axi4_stream_video_slave_image_height(write_axi4_stream_video_slave_image_height),  // ufix13
                                                          .write_axi4_stream_video_slave_hporch(write_axi4_stream_video_slave_hporch),  // ufix13
                                                          .write_axi4_stream_video_slave_vporch(write_axi4_stream_video_slave_vporch)  // ufix13
                                                          );

  K_Means_ip_axi_lite_module u_K_Means_ip_axi_lite_module_inst (.clk(AXI4_Lite_ACLK),  // ufix1
                                                                .AXI4_Lite_ARESETN(AXI4_Lite_ARESETN),  // ufix1
                                                                .AXI4_Lite_AWADDR(AXI4_Lite_AWADDR),  // ufix16
                                                                .AXI4_Lite_AWVALID(AXI4_Lite_AWVALID),  // ufix1
                                                                .AXI4_Lite_WDATA(AXI4_Lite_WDATA),  // ufix32
                                                                .AXI4_Lite_WSTRB(AXI4_Lite_WSTRB),  // ufix4
                                                                .AXI4_Lite_WVALID(AXI4_Lite_WVALID),  // ufix1
                                                                .AXI4_Lite_BREADY(AXI4_Lite_BREADY),  // ufix1
                                                                .AXI4_Lite_ARADDR(AXI4_Lite_ARADDR),  // ufix16
                                                                .AXI4_Lite_ARVALID(AXI4_Lite_ARVALID),  // ufix1
                                                                .AXI4_Lite_RREADY(AXI4_Lite_RREADY),  // ufix1
                                                                .data_read(top_data_read),  // ufix32
                                                                .AXI4_Lite_AWREADY(AXI4_Lite_AWREADY),  // ufix1
                                                                .AXI4_Lite_WREADY(AXI4_Lite_WREADY),  // ufix1
                                                                .AXI4_Lite_BRESP(AXI4_Lite_BRESP),  // ufix2
                                                                .AXI4_Lite_BVALID(AXI4_Lite_BVALID),  // ufix1
                                                                .AXI4_Lite_ARREADY(AXI4_Lite_ARREADY),  // ufix1
                                                                .AXI4_Lite_RDATA(AXI4_Lite_RDATA),  // ufix32
                                                                .AXI4_Lite_RRESP(AXI4_Lite_RRESP),  // ufix2
                                                                .AXI4_Lite_RVALID(AXI4_Lite_RVALID),  // ufix1
                                                                .data_write(top_data_write),  // ufix32
                                                                .addr_sel(top_addr_sel),  // ufix14
                                                                .wr_enb(top_wr_enb),  // ufix1
                                                                .rd_enb(top_rd_enb),  // ufix1
                                                                .reset_internal(top_reset_internal)  // ufix1
                                                                );

  assign reset_internal = top_reset_internal;

endmodule  // K_Means_ip_axi_lite

