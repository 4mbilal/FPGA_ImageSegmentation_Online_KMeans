// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\Sementation_8K\K_Means_ip_dut.v
// Created: 2019-03-29 13:41:20
// 
// Generated by MATLAB 9.6 and HDL Coder 3.14
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: K_Means_ip_dut
// Source Path: K_Means_ip/K_Means_ip_dut
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module K_Means_ip_dut
          (clk,
           reset,
           dut_enable,
           pixelIn,
           ctrlIn_hStart,
           ctrlIn_hEnd,
           ctrlIn_vStart,
           ctrlIn_vEnd,
           ctrlIn_valid,
           ce_out,
           pixelOut,
           ctrlOut_hStart,
           ctrlOut_hEnd,
           ctrlOut_vStart,
           ctrlOut_vEnd,
           ctrlOut_valid);


  input   clk;
  input   reset;
  input   dut_enable;  // ufix1
  input   [31:0] pixelIn;  // ufix32
  input   ctrlIn_hStart;  // ufix1
  input   ctrlIn_hEnd;  // ufix1
  input   ctrlIn_vStart;  // ufix1
  input   ctrlIn_vEnd;  // ufix1
  input   ctrlIn_valid;  // ufix1
  output  ce_out;  // ufix1
  output  [31:0] pixelOut;  // ufix32
  output  ctrlOut_hStart;  // ufix1
  output  ctrlOut_hEnd;  // ufix1
  output  ctrlOut_vStart;  // ufix1
  output  ctrlOut_vEnd;  // ufix1
  output  ctrlOut_valid;  // ufix1


  wire enb;
  wire ce_out_sig;  // ufix1
  wire [31:0] pixelOut_sig;  // ufix32
  wire ctrlOut_hStart_sig;  // ufix1
  wire ctrlOut_hEnd_sig;  // ufix1
  wire ctrlOut_vStart_sig;  // ufix1
  wire ctrlOut_vEnd_sig;  // ufix1
  wire ctrlOut_valid_sig;  // ufix1


  assign enb = dut_enable;

  K_Means_ip_src_Segmentation_HW u_K_Means_ip_src_Segmentation_HW (.clk(clk),
                                                                   .clk_enable(enb),
                                                                   .reset(reset),
                                                                   .pixelIn(pixelIn),  // ufix32
                                                                   .ctrlIn_hStart(ctrlIn_hStart),  // ufix1
                                                                   .ctrlIn_hEnd(ctrlIn_hEnd),  // ufix1
                                                                   .ctrlIn_vStart(ctrlIn_vStart),  // ufix1
                                                                   .ctrlIn_vEnd(ctrlIn_vEnd),  // ufix1
                                                                   .ctrlIn_valid(ctrlIn_valid),  // ufix1
                                                                   .ce_out(ce_out_sig),  // ufix1
                                                                   .pixelOut(pixelOut_sig),  // ufix32
                                                                   .ctrlOut_hStart(ctrlOut_hStart_sig),  // ufix1
                                                                   .ctrlOut_hEnd(ctrlOut_hEnd_sig),  // ufix1
                                                                   .ctrlOut_vStart(ctrlOut_vStart_sig),  // ufix1
                                                                   .ctrlOut_vEnd(ctrlOut_vEnd_sig),  // ufix1
                                                                   .ctrlOut_valid(ctrlOut_valid_sig)  // ufix1
                                                                   );

  assign ce_out = ce_out_sig;

  assign pixelOut = pixelOut_sig;

  assign ctrlOut_hStart = ctrlOut_hStart_sig;

  assign ctrlOut_hEnd = ctrlOut_hEnd_sig;

  assign ctrlOut_vStart = ctrlOut_vStart_sig;

  assign ctrlOut_vEnd = ctrlOut_vEnd_sig;

  assign ctrlOut_valid = ctrlOut_valid_sig;

endmodule  // K_Means_ip_dut

